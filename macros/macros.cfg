[gcode_macro RUN_SHAPER]
description: Run X/Y resonance tests and shaper calc
gcode:
  ACCELEROMETER_QUERY
  MEASURE_AXES_NOISE
  TEST_RESONANCES AXIS=X
  TEST_RESONANCES AXIS=Y
  SHAPER_CALIBRATE
  # SAVE_CONFIG

[gcode_macro UNLOCK_AND_MOVE]
description: Enable motor movement without homing
gcode:
  SET_KINEMATIC_POSITION X=200 Y=200 Z=200
  G91
  RESPOND PREFIX="info" MSG="Axes unlocked. Use relative G1 moves to reposition."

[gcode_macro G32]
gcode:
  SAVE_GCODE_STATE NAME=STATE_G32
  G90
  G28
  QUAD_GANTRY_LEVEL
  G28
  PARK
  RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PARK]
description: Park center-front, Z up
gcode:
  {% set z = params.Z|default(30)|int %}
  {% set x = printer.toolhead.axis_maximum.x|int - 20 %}
  {% set y = 20 %}
  G90
  G1 Z{min(printer.toolhead.axis_maximum.z|int, (printer.toolhead.position.z + z))} F6000
  G1 X{x} Y{y} F12000

[gcode_macro SMART_PARK]
description: Lift then park at front-right
gcode:
  {% set z = params.Z|default(15)|int %}
  G91
  G1 Z{z} F600
  G90
  G1 X{printer.toolhead.axis_minimum.x + 10} Y{printer.toolhead.axis_minimum.y + 10} F12000

[gcode_macro PRINT_START]
description: Start sequence with QGL, mesh, and nozzle clean
gcode:
  {% set EXTRUDER = params.EXTRUDER|default(240)|float %}
  {% set BED = params.BED|default(55)|float %}
  {% set PREHEAT = [EXTRUDER - 40, 140]|max %}

  RUN_SHELL_COMMAND CMD=backup_now
  M117
  RESPOND MSG="Start -> Bed {BED|int}C, Hotend {EXTRUDER|int}C"

  ; --- Preheat ---
  M140 S{BED}
  M104 S{PREHEAT}

  ; --- Home & level ---
  G90
  G28
  QUAD_GANTRY_LEVEL
  G28 Z

  ; --- Heat soak & mesh ---
  M190 S{BED}
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE

  ; --- Final hotend temp ---
  M104 S{EXTRUDER}
  M109 S{EXTRUDER}

  ; --- Clean nozzle ---
  CLEAN_NOZZLE

  ; --- Beep and LEDs ---
  M300 P150
  LED_BLUE




[delayed_gcode TEMP_REPORT]
gcode:
  RESPOND MSG="Bed {printer.heater_bed.temperature|round(1)}°C/{printer.heater_bed.target}°C  |  Hotend {printer.extruder.temperature|round(1)}°C/{printer.extruder.target}°C"
  UPDATE_DELAYED_GCODE ID=TEMP_REPORT DURATION=30

[gcode_macro PRINT_END]
description: Park, cool, and tidy up (keeps your behavior)
gcode:
  ; --- Finish queued moves, then snapshot current state ---
  M400                                  ; wait for buffer to empty
  SAVE_GCODE_STATE NAME=STATE_PRINT_END ; remember units/relative/etc.

  ; --- Retract a touch and lift Z to avoid scarring the print ---
  G92 E0
  G1 E-2 F1800                          ; your 2mm retract
  G91                                   ; relative moves
  G1 Z10 F600                           ; lift 10mm
  G90                                   ; back to absolute

  ; --- Park (your location). Change if you prefer front-right. ---
  ; For front-right: 
  ; {% set park_x = printer.toolhead.axis_maximum.x - 10 %}
  ; {% set park_y = printer.toolhead.axis_maximum.y - 10 %}
  ; G1 X{park_x} Y{park_y} F12000
  G1 X10 Y300 F12000                    ; your original park

  ; --- Cool down & cleanup ---
  TURN_OFF_HEATERS                      ; hotend/bed off
  M107                                  ; part cooling fan off
  BED_MESH_CLEAR                        ; drop mesh so next start is clean

  ; --- Restore prior state (units/relative), keep current position ---
  RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 260
variable_start_y: 350
variable_start_z: 0
variable_wipe_dist: 50
variable_wipe_qty: 5
variable_wipe_spd: 200
variable_raise_distance: 15
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %} G28 {% endif %}
  G90
  G1 Z{start_z} F600
  G1 X{start_x} Y{start_y} F6000
  {% for wipe in range(1, (wipe_qty + 1)) %}
    G1 X{start_x + wipe_dist} F{wipe_spd * 60}
    G1 X{start_x} F{wipe_spd * 60}
  {% endfor %}
  G1 Z{start_z + raise_distance}

[gcode_macro LOAD_FILAMENT]
variable_load_length: 100
variable_purge_length: 30
variable_load_speed: 300
variable_purge_speed: 150
gcode:
  M83
  G91
  G1 E{load_length} F{load_speed}
  G1 E{purge_length} F{purge_speed}
  G90
  BEEP

[gcode_macro UNLOAD_FILAMENT]
variable_unload_length: 100
variable_unload_speed: 300
gcode:
  M83
  G91
  G1 E-{unload_length} F{unload_speed}
  G90
  BEEP

[gcode_macro SGT]
description: Set StallGuard SGT live (−64..63)
gcode:
  {% if 'X' in params %}SET_TMC_FIELD STEPPER=stepper_x FIELD=SGT VALUE={params.X|int}{% endif %}
  {% if 'Y' in params %}SET_TMC_FIELD STEPPER=stepper_y FIELD=SGT VALUE={params.Y|int}{% endif %}
  {% if 'X' in params %}DUMP_TMC STEPPER=stepper_x{% endif %}
  {% if 'Y' in params %}DUMP_TMC STEPPER=stepper_y{% endif %}

# ---------- Passive beeper core ----------
# ================= PASSIVE BUZZER ON VFAN0 (PB6) — FULL BLOCK =================

# ---- Core tone helper (EVERY note sets its own frequency) ----

[gcode_macro M300]
description: Passive buzzer beep (S=Hz, P=ms)
gcode:
  {% set hz = params.S|default(3000)|int %}
  {% set ms = params.P|default(180)|int %}
  TONE S={hz} P={ms} D=0.85

[gcode_macro BEEP]
gcode: M300 S=3000 P=200

[gcode_macro BEEP_LOW]
gcode: TONE S=2400 P=260 D=0.85

[gcode_macro BEEP_HIGH]
gcode: TONE S=3400 P=260 D=0.85

[gcode_macro BEEP_DOUBLE]
gcode:
  TONE S=2800 P=150 D=0.85
  REST P=60
  TONE S=2800 P=150 D=0.85

[gcode_macro BEEP_TRIPLE]
gcode:
  TONE S=2800 P=140 D=0.85
  REST P=60
  TONE S=2800 P=140 D=0.85
  REST P=60
  TONE S=2800 P=140 D=0.85

[gcode_macro BEEP_ASCEND]
gcode:
  TONE S=2200 P=180 D=0.85
  REST P=50
  TONE S=2700 P=180 D=0.85
  REST P=50
  TONE S=3200 P=180 D=0.85
  REST P=50
  TONE S=3600 P=220 D=0.85

[gcode_macro BEEP_DESCEND]
gcode:
  TONE S=3600 P=180 D=0.85
  REST P=50
  TONE S=3200 P=180 D=0.85
  REST P=50
  TONE S=2700 P=180 D=0.85
  REST P=50
  TONE S=2200 P=220 D=0.85

[gcode_macro BEEP_SUCCESS]
gcode:
  TONE S=2200 P=140 D=0.85
  REST P=40
  TONE S=2700 P=140 D=0.85
  REST P=40
  TONE S=3200 P=220 D=0.85

[gcode_macro BEEP_FAIL]
gcode:
  TONE S=3200 P=180 D=0.85
  REST P=40
  TONE S=2200 P=240 D=0.85
  REST P=40
  TONE S=1700 P=300 D=0.85

[gcode_macro DIXIE]
gcode:
  TONE S=392 P=180 D=0.85
  TONE S=330 P=180 D=0.85
  TONE S=523 P=180 D=0.85
  TONE S=494 P=180 D=0.85
  TONE S=440 P=180 D=0.85
  TONE S=392 P=180 D=0.85
  TONE S=330 P=360 D=0.85
  REST P=120
  TONE S=392 P=180 D=0.85
  TONE S=330 P=180 D=0.85
  TONE S=523 P=180 D=0.85
  TONE S=494 P=180 D=0.85
  TONE S=440 P=180 D=0.85
  TONE S=392 P=180 D=0.85
  TONE S=330 P=360 D=0.85

[gcode_macro RESONANCE_TEST_ALL]
description: Run X and Y resonance tests, calibrate input shaper, and bump accel
gcode:
  TEST_RESONANCES AXIS=X
  TEST_RESONANCES AXIS=Y
  SHAPER_CALIBRATE
  SET_VELOCITY_LIMIT ACCEL=8000
  RESPOND MSG="Resonance test complete. Max accel set to 8000 mm/s²"

  [gcode_macro SERVICE]
description: Move head to front-center at mid Z for access (homes if needed)
gcode:
  {% if "x" not in printer.toolhead.homed_axes
        or "y" not in printer.toolhead.homed_axes
        or "z" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}
  G90
  {% set xmid = (printer.toolhead.axis_minimum.x + printer.toolhead.axis_maximum.x) / 2 %}
  {% set zhalf = printer.toolhead.axis_maximum.z / 2 %}
  {% set yfront = params.Y|default(10)|float %}
  {% set ztarget = zhalf if zhalf > 20 else 20 %}
  G0 Z{ztarget:.2f} F6000
  G0 X{xmid:.2f} Y{yfront:.2f} F12000

  [gcode_macro LED_OFF]
gcode: SET_LED LED=sb_leds RED=0 GREEN=0 BLUE=0

[gcode_macro LED_WHITE]
gcode: SET_LED LED=sb_leds RED=1 GREEN=1 BLUE=1

[gcode_macro LED_RED]
gcode: SET_LED LED=sb_leds RED=1 GREEN=0 BLUE=0

[gcode_macro LED_GREEN]
gcode: SET_LED LED=sb_leds RED=0 GREEN=1 BLUE=0

[gcode_macro LED_BLUE]
gcode: SET_LED LED=sb_leds RED=0 GREEN=0 BLUE=1



